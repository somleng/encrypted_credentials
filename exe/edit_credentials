#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "optparse"
require "tempfile"
require "fileutils"
require "encrypted_credentials/encrypted_file"
require "encrypted_credentials/coder"

Options = Struct.new(:filepath, :key)
options = Options.new

parser = OptionParser.new do |opts|
  opts.banner = "Usage: EDITOR=vim edit_credentials [options]"

  opts.on("-f", "--file FILENAME", "Encrypted credentials file") { |o| options.filepath = Pathname(o) }
  opts.on("-k", "--keyfile KEY_FILE", "Key file. Default: $APP_MASTER_KEY") { |o| options.key = File.read(o) }
end

parser.parse!

raise(ArgumentError, "Missing credentials file") if options.filepath.nil?
options.key ||= ENV.fetch("APP_MASTER_KEY")
options.key.chomp!

coder = EncryptedCredentials::Coder.new(key: options.key)
encrypted_file = EncryptedCredentials::EncryptedFile.new(file: options.filepath, coder:)

Tempfile.create(options.filepath.basename.to_s) do |tmpfile|
  if options.filepath.exist?
    tmpfile.write(encrypted_file.read)
    tmpfile.flush
    tmpfile.rewind
  end

  system("#{ENV.fetch("EDITOR", "vi")} #{tmpfile.path}")

  updated_content = File.read(tmpfile)
  encrypted_file.write(updated_content)
end
